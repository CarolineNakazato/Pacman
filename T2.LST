Turbo Assembler	 Version 2.0	    11/27/17 17:20:58	    Page 1
t2.ASM
PACMAN


      1				     TITLE PACMAN
      2	0000			     .MODEL SMALL
      3	0000			     .STACK 100h
      4	0000			     .DATA
      5				     ;filename db 'menu00.bmp',0
      6	0000  40*(00)		     filename db 64 dup	(0)
      7	0040  ????		     filehandle	dw ?
      8	0042  36*(00)		     Header db 54 dup (0)
      9	0078  0400*(00)		     Palette db	256*4 dup (0)
     10	0478  0140*(00)		     ScrLine db	320 dup	(0)
     11	05B8  45 72 72 6F 72 0D	0A+  ErrorMsg db 'Error', 13, 10,'$'
     12	      24
     13
     14	05C0  6D 65 6E 75 30 30	2E+  menu00 db 'menu00.bmp',0
     15	      62 6D 70 00
     16	05CB  6D 65 6E 75 30 31	2E+  menu01 db 'menu01.bmp',0
     17	      62 6D 70 00
     18	05D6  6D 65 6E 75 31 5F	30+  menu1_00 db 'menu1_00.bmp',0
     19	      30 2E 62 6D 70 00
     20	05E3  6D 65 6E 75 31 5F	30+  menu1_02 db 'menu1_02.bmp',0
     21	      32 2E 62 6D 70 00
     22	05F0  6D 65 6E 75 31 5F	31+  menu1_10 db 'menu1_10.bmp',0
     23	      30 2E 62 6D 70 00
     24	05FD  6D 65 6E 75 31 5F	31+  menu1_12 db 'menu1_12.bmp',0
     25	      32 2E 62 6D 70 00
     26
     27				     ;-----------------------------------------------------------------------------------------------
     28				     -------------------
     29	060A			     .CODE
     30	0000			     PROC MAIN
     31	0000  B8 0000s			     mov     AX,@DATA
     32	0003  8E D8			     mov     DS,AX
     33
     34	0005  B4 00			     mov     AH,00h
     35	0007  B0 13			     mov     AL,013h
     36	0009  CD 10			     int     010h
     37
     38	000B  8C CE 0000r		     mov     filename, menu00
**Error** t2.ASM(30) Illegal memory reference
     39	000F  E8 0045			     call    OpenFile
     40	0012  E8 0059			     call    ReadHeader
     41	0015  E8 0065			     call    ReadPalette
     42	0018  E8 006D			     call    CopyPal
     43	001B  E8 0094			     call    CopyBitmap
     44
     45	001E			     end_main:
     46	001E  B4 01			     mov     AH,01h
     47	0020  CD 21			     int     21h
     48	0022  CD 21			     int     21h
     49
     50	0024  B4 00			     mov     AH,00	 ; return to text mode:
     51	0026  B0 03			     mov     AL,03	 ;text mode 3
     52	0028  CD 10			     int     10h
     53	002A  B4 4C			     mov     AH,04Ch
     54	002C  CD 21			     int     021h
     55	002E			     ENDP MAIN
     56
Turbo Assembler	 Version 2.0	    11/27/17 17:20:58	    Page 2
t2.ASM
PACMAN


     57				     ;;===========================================================
     58				     ;;================	 Teclado  ================================
     59	002E			     PROC Teclado
     60	002E			     teclado:
     61	002E  B4 00			     mov     AH,00h
     62	0030  CD 16			     int     016h
     63	0032  80 FC 48			     cmp     AH,048h
     64	0035  74 17			     je	     up
     65	0037  80 FC 4B			     cmp     AH,04Bh
     66	003A  74 14			     je	     left
     67	003C  80 FC 4D			     cmp     AH,04Dh
     68	003F  74 11			     je	     right
     69	0041  80 FC 50			     cmp     AH,050h
     70	0044  74 0E			     je	     down
     71	0046  80 FC 01			     cmp     AH,01h
     72	0049  75 E3			     jne     teclado
     73	004B  EB 09 90			     jmp     teclado_fim
     74
     75	004E			     up:
     76	004E  EB DE			     jmp     teclado
     77	0050			     left:
     78	0050  EB DC			     jmp     teclado
     79	0052			     right:
     80	0052  EB DA			     jmp     teclado
     81	0054			     down:
     82	0054  EB D8			     jmp     teclado
     83
     84	0056			     teclado_fim:
     85	0056  C3			     ret
     86	0057			     Teclado ENDP
     87				     ;;==============================================================================
     88				     ;;==============================================================================
     89				     ;;==============================================================================
     90				     ;;==============================================================================
     91	0057			     proc OpenFile
     92	0057  B4 3D			 mov ah, 3Dh
     93	0059  32 C0			 xor al, al
     94	005B  BA 0000r			 mov dx, offset	filename
     95	005E  CD 21			 int 21h
     96
     97	0060  72 04			 jc openerror
     98	0062  A3 0040r			 mov [filehandle], ax
     99	0065  C3			 ret
    100
    101	0066				 openerror:
    102	0066  BA 05B8r			 mov dx, offset	ErrorMsg
    103	0069  B4 09			 mov ah, 9h
    104	006B  CD 21			 int 21h
    105	006D  C3			 ret
    106	006E			     endp OpenFile
    107				     ;;==============================================================================
    108	006E			     proc ReadHeader
    109	006E  B4 3F			 mov ah,3fh
    110	0070  8B 1E 0040r		 mov bx, [filehandle]
    111	0074  B9 0036			 mov cx,54
    112	0077  BA 0042r			 mov dx,offset Header
    113	007A  CD 21			 int 21h
Turbo Assembler	 Version 2.0	    11/27/17 17:20:58	    Page 3
t2.ASM
PACMAN


    114	007C  C3			 ret
    115	007D				 endp ReadHeader
    116	007D				 proc ReadPalette
    117
    118					 ; Read	BMP file color palette,	256 colors * 4 bytes (400h)
    119	007D  B4 3F			 mov ah,3fh
    120	007F  B9 0400			 mov cx,400h
    121	0082  BA 0078r			 mov dx,offset Palette
    122	0085  CD 21			 int 21h
    123	0087  C3			 ret
    124	0088			     endp ReadPalette
    125				     ;;==============================================================================
    126	0088			     proc CopyPal
    127					 ; Copy	the colors palette to the video	memory
    128					 ; The number of the first color should	be sent	to port	3C8h
    129					 ; The palette is sent to port 3C9h
    130	0088  BE 0078r			 mov si,offset Palette
    131	008B  B9 0100			 mov cx,256
    132	008E  BA 03C8			 mov dx,3C8h
    133	0091  B0 00			 mov al,0
    134
    135					 ; Copy	starting color to port 3C8h
    136	0093  EE			 out dx,al
    137
    138					 ; Copy	palette	itself to port 3C9h
    139	0094  42			 inc dx
    140	0095				 PalLoop:
    141
    142					 ; Note: Colors	in a BMP file are saved	as BGR values rather than RGB.
    143
    144	0095  8A 44 02			 mov al,[si+2] ; Get red value.
    145	0098  D0 E8			 shr al,1 ; Max. is 255, but video palette maximal
    146	009A  D0 E8			 shr al,1
    147					 ; value is 63.	Therefore dividing by 4.
    148
    149	009C  EE			 out dx,al ; Send it.
    150	009D  8A 44 01			 mov al,[si+1] ; Get green value.
    151	00A0  D0 E8			 shr al,1
    152	00A2  D0 E8			 shr al,1
    153	00A4  EE			 out dx,al ; Send it.
    154	00A5  8A 04			 mov al,[si] ; Get blue	value.
    155	00A7  D0 E8			 shr al,1
    156	00A9  D0 E8			 shr al,1
    157	00AB  EE			 out dx,al ; Send it.
    158	00AC  83 C6 04			 add si,4 ; Point to next color.
    159
    160					 ; (There is a null chr. after every color.)
    161
    162	00AF  E2 E4			 loop PalLoop
    163	00B1  C3			 ret
    164	00B2			     endp CopyPal
    165				     ;;==============================================================================
    166	00B2			     proc CopyBitmap
    167
    168					 ; BMP graphics	are saved upside-down.
    169					 ; Read	the graphic line by line (200 lines in VGA format),
    170					 ; displaying the lines	from bottom to top.
Turbo Assembler	 Version 2.0	    11/27/17 17:20:58	    Page 4
t2.ASM
PACMAN


    171
    172	00B2  B8 A000			 mov ax, 0A000h
    173	00B5  8E C0			 mov es, ax
    174	00B7  B9 00C8			 mov cx,200
    175	00BA				 PrintBMPLoop:
    176	00BA  51			 push cx
    177
    178					 ; di =	cx*320,	point to the correct screen line
    179
    180	00BB  8B F9			 mov di,cx
    181	00BD  D1 E1			 shl cx,1
    182	00BF  D1 E1			 shl cx,1
    183	00C1  D1 E1			 shl cx,1
    184	00C3  D1 E1			 shl cx,1
    185	00C5  D1 E1			 shl cx,1
    186	00C7  D1 E1			 shl cx,1
    187	00C9  51			 push cx
    188	00CA  B9 0008			 mov cx,08h
    189	00CD  D3 E7			 shl di,cl
    190	00CF  59			 pop cx
    191	00D0  03 F9			 add di,cx
    192
    193					 ; Read	one line
    194
    195	00D2  B4 3F			 mov ah,3fh
    196	00D4  B9 0140			 mov cx,320
    197	00D7  BA 0478r			 mov dx,offset ScrLine
    198	00DA  CD 21			 int 21h
    199
    200					 ; Copy	one line into video memory
    201
    202	00DC  FC			 cld
    203
    204					 ; Clear direction flag, for movsb
    205
    206	00DD  B9 0140			 mov cx,320
    207	00E0  BE 0478r			 mov si,offset ScrLine
    208	00E3  F3> A4			 rep movsb
    209
    210					 ; Copy	line to	the screen
    211					 ;rep movsb is same as the following code:
    212					 ;mov es:di, ds:si
    213					 ;inc si
    214					 ;inc di
    215					 ;dec cx
    216					 ;loop until cx=0
    217
    218	00E5  59			 pop cx
    219	00E6  E2 D2			 loop PrintBMPLoop
    220	00E8  C3			 ret
    221	00E9			     endp CopyBitmap
    222				     ;;==============================================================================
    223				     END MAIN
Turbo Assembler	 Version 2.0	    11/27/17 17:20:58	    Page 5
Symbol Table
PACMAN



Symbol Name			  Type	 Value

??DATE				  Text	 "11/27/17"
??FILENAME			  Text	 "t2	  "
??TIME				  Text	 "17:20:58"
??VERSION			  Number 0200
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 T2
@MODEL				  Text	 2
@WORDSIZE			  Text	 2
COPYBITMAP			  Near	 _TEXT:00B2
COPYPAL				  Near	 _TEXT:0088
DOWN				  Near	 _TEXT:0054
END_MAIN			  Near	 _TEXT:001E
ERRORMSG			  Byte	 DGROUP:05B8
FILEHANDLE			  Word	 DGROUP:0040
FILENAME			  Byte	 DGROUP:0000
HEADER				  Byte	 DGROUP:0042
LEFT				  Near	 _TEXT:0050
MAIN				  Near	 _TEXT:0000
MENU00				  Byte	 DGROUP:05C0
MENU01				  Byte	 DGROUP:05CB
MENU1_00			  Byte	 DGROUP:05D6
MENU1_02			  Byte	 DGROUP:05E3
MENU1_10			  Byte	 DGROUP:05F0
MENU1_12			  Byte	 DGROUP:05FD
OPENERROR			  Near	 _TEXT:0066
OPENFILE			  Near	 _TEXT:0057
PALETTE				  Byte	 DGROUP:0078
PALLOOP				  Near	 _TEXT:0095
PRINTBMPLOOP			  Near	 _TEXT:00BA
READHEADER			  Near	 _TEXT:006E
READPALETTE			  Near	 _TEXT:007D
RIGHT				  Near	 _TEXT:0052
SCRLINE				  Byte	 DGROUP:0478
TECLADO				  Near	 _TEXT:002E
TECLADO_FIM			  Near	 _TEXT:0056
UP				  Near	 _TEXT:004E

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  060A Word	  Public  DATA
_TEXT				  16  00E9 Word	  Public  CODE
Turbo Assembler	 Version 2.0	    11/27/17 17:20:58	    Page 6
Error Summary
PACMAN


**Error** t2.ASM(30) Illegal memory reference
